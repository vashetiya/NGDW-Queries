/*
MARKETING_ACTIVITY
Purpose
    - Marketing Data of HCP and Patients with additional tactic code and metric attributes added 
Change Log
    - 2021-06-16 - vshetiya - Created

*/

USE ROLE __SNOWFLAKE_NGCA_CIM_DEPLOY_RL__; 



CREATE OR REPLACE VIEW __SNOWFLAKE_NGCA_DB__.MCE.MARKETING_ACTIVITY 
COMMENT = 'VIEW CONTAINING THE MARKETING DATA FOR HCPS AND PATIENTS' 
AS

WITH sf_target AS
	(
		SELECT 
			MK_ACCOUNT_VNT_ID, 
			CYCLE_PLAN_START_DATE,
            CYCLE_PLAN_END_DATE,
			LEAD(CYCLE_PLAN_START_DATE) OVER (PARTITION BY MK_ACCOUNT_VNT_ID ORDER BY CYCLE_PLAN_START_DATE) AS LEADING_START_DATE,
			CASE WHEN LEADING_START_DATE IS NULL THEN CYCLE_PLAN_END_DATE 
				 WHEN LEADING_START_DATE <= CYCLE_PLAN_END_DATE THEN DATEADD(DAY, -1, LEADING_START_DATE) 
				 ELSE CYCLE_PLAN_END_DATE END AS UPDATED_CYCLE_PLAN_END_DATE 
		FROM
			(
				SELECT
					 MK_ACCOUNT_VNT_ID,
					 CYCLE_PLAN_START_DATE,
					 CYCLE_PLAN_END_DATE,
					 LAG(CYCLE_PLAN_END_DATE) OVER (PARTITION BY MK_ACCOUNT_VNT_ID ORDER BY CYCLE_PLAN_START_DATE) LAGGING_END_DATE 
				FROM	
					(
						SELECT 
							 MK_ACCOUNT_VNT_ID,    	
                             TO_DATE(CYCLE_PLAN_START_DATE) AS CYCLE_PLAN_START_DATE,
                             TO_DATE(CYCLE_PLAN_END_DATE) AS CYCLE_PLAN_END_DATE
				        FROM     
					        __SNOWFLAKE_NGDW_DB__.SEMANTIC.CYCLE_PLAN_FACT 
				        WHERE	 
						    PLANNED_CALL_COUNT > 0
							QUALIFY ROW_NUMBER() OVER (PARTITION BY MK_ACCOUNT_VNT_ID,CYCLE_PLAN_START_DATE ORDER BY CYCLE_PLAN_END_DATE DESC) =1 
					)
			)		
		WHERE LAGGING_END_DATE IS NULL 
			  OR CYCLE_PLAN_END_DATE > LAGGING_END_DATE
	)


(
 SELECT 
	maf.SOURCE_CD||(TO_CHAR(CASE WHEN maf.MK_PATIENT_GNE_ID = -1 THEN maf.MK_ACCOUNT_VNT_ID ELSE maf.MK_PATIENT_GNE_ID END)||maf.CUSTOMER_IDENTITY_VALUE)||TO_CHAR(maf.LAST_LOAD_TS) AS SOURCE_CUST_DATE_KEY,
	CASE WHEN maf.MK_PATIENT_GNE_ID = -1 THEN maf.MK_ACCOUNT_VNT_ID ELSE maf.MK_PATIENT_GNE_ID END AS RDM_KEY,
	maf.SOURCE_CD AS SOURCE_CODE,
	maf.CUSTOMER_IDENTITY_VALUE,
	maf.CUSTOMER_IDENTITY_TYPE,
	maf.REP_ID,
	CASE WHEN (maf.CUSTOMER_TYPE IS NULL OR UPPER(maf.CUSTOMER_TYPE) = 'UNKNOWN') 
		 THEN NVL(UPPER(account_dim.ACCOUNT_CLASS),
         CASE WHEN UPPER(patient_dim.PATIENT_CLASS) = 'OTHER'
			  THEN 'CONTACT' 
			  WHEN (UPPER(patient_dim.PATIENT_CLASS) LIKE '%PATIENT%' OR UPPER(patient_dim.PATIENT_CLASS) LIKE '%CAREGIVER%')  THEN 'PATIENT' 
			  ELSE UPPER(patient_dim.PATIENT_CLASS) END) 
         ELSE UPPER(maf.CUSTOMER_TYPE) END AS CUSTOMER_TYPE, 
	NVL(UPPER(account_dim.ACCOUNT_CLASS),
    CASE WHEN UPPER(patient_dim.PATIENT_CLASS) = 'OTHER' THEN 'CONTACT' 
         WHEN (UPPER(patient_dim.PATIENT_CLASS) LIKE '%PATIENT%' OR UPPER(patient_dim.PATIENT_CLASS) LIKE '%CAREGIVER%')  THEN 'PATIENT' 
         ELSE UPPER(patient_dim.PATIENT_CLASS) END) AS PARTY_CLASS,
	NVL(UPPER(account_dim.ACCOUNT_CLASS),UPPER(patient_dim.PATIENT_CLASS)) AS PARTY_SUBTYPE, 
	maf.OFFER_DES AS ACTIVITY_OFFER_DESCRIPTION, 
	maf.TERRITORY_ID,
	maf.SESSION_ID,
	maf.TRANSACTION_ID,
	maf.PARENT_TRANSACTION_ID,
	maf.CONTENT_ID,
	maf.REFERAL_ID_TYPE AS REFERRAL_ID_TYPE,
	maf.REFERAL_ID_VALUE AS REFERRAL_ID_VALUE,
	maf.REFERAL_CONTENT_ID AS REFERRAL_CONTENT_ID,
	maf.DESTINATION_ID_TYPE,
	maf.DESTINATION_ID_VALUE,
	maf.DESTINATION_CONTENT_ID,
	maf.ACTIVITY_CNT,
	maf.TIME_SPENT,
	maf.IS_AGGREGATED,
	maf.IS_ACTIVE,
	maf.INTEGRATION_KEY,
	maf.ROW_HASH_KEY,
	maf.JOB_RUN_ID,
	maf.LAST_LOAD_TS,
	maf.DEVICE_TYPE,
	maf.ATTRIBUTE_1_NAME, maf.ATTRIBUTE_1_VALUE,
	maf.ATTRIBUTE_2_NAME, maf.ATTRIBUTE_2_VALUE,
	maf.ATTRIBUTE_3_NAME, maf.ATTRIBUTE_3_VALUE,
	maf.ATTRIBUTE_4_NAME, maf.ATTRIBUTE_4_VALUE,
	maf.ATTRIBUTE_5_NAME, maf.ATTRIBUTE_5_VALUE,
	maf.ATTRIBUTE_6_NAME, maf.ATTRIBUTE_6_VALUE,
	maf.ATTRIBUTE_7_NAME, maf.ATTRIBUTE_7_VALUE,
	maf.ATTRIBUTE_8_NAME, maf.ATTRIBUTE_8_VALUE,
	maf.ATTRIBUTE_9_NAME, maf.ATTRIBUTE_9_VALUE,
	maf.ATTRIBUTE_10_NAME, maf.ATTRIBUTE_10_VALUE,
	maf.ATTRIBUTE_11_NAME, maf.ATTRIBUTE_11_VALUE,
	maf.ATTRIBUTE_12_NAME, maf.ATTRIBUTE_12_VALUE,
	maf.ATTRIBUTE_13_NAME, maf.ATTRIBUTE_13_VALUE,
	maf.ATTRIBUTE_14_NAME, maf.ATTRIBUTE_14_VALUE,
	maf.ATTRIBUTE_15_NAME, maf.ATTRIBUTE_15_VALUE,
	maf.ATTRIBUTE_16_NAME, maf.ATTRIBUTE_16_VALUE,
	maf.ATTRIBUTE_17_NAME, maf.ATTRIBUTE_17_VALUE,
	maf.ATTRIBUTE_18_NAME, maf.ATTRIBUTE_18_VALUE,
	maf.ATTRIBUTE_19_NAME, maf.ATTRIBUTE_19_VALUE,
	maf.ATTRIBUTE_20_NAME, maf.ATTRIBUTE_20_VALUE,
	maf.ATTRIBUTE_21_NAME, maf.ATTRIBUTE_21_VALUE,
	maf.ATTRIBUTE_22_NAME, maf.ATTRIBUTE_22_VALUE,
	maf.ATTRIBUTE_23_NAME, maf.ATTRIBUTE_23_VALUE,
	maf.ATTRIBUTE_24_NAME, maf.ATTRIBUTE_24_VALUE,
	maf.ATTRIBUTE_25_NAME, maf.ATTRIBUTE_25_VALUE,
	maf.GEO_REGION_CD AS GEO_REGION_CODE,
	maf.HAS_INTERACTION_DETAIL,
	TO_DATE(maf.ACTIVITY_TIME) AS TIME_DATE,
	TO_NUMBER(TO_CHAR(TO_DATE(maf.ACTIVITY_TIME),'YYYYMMDD')) AS DATE_NBR,
	TO_CHAR(maf.ACTIVITY_TIME, 'HH24:MI:SS') AS TIMESTAMP,
	maf.ACTIVITY_TIME AS DATE_TIMESTAMP,
	maf.CHANNEL_CD AS SOURCE_CHANNEL_CODE,
	TRIM(maf.CHANNEL_NAME) AS SOURCE_CHANNEL_NAME,
	TRIM(maf.CHANNEL_LEVEL_2_NAME) AS SOURCE_CHANNEL_LVL2_NAME,
	TRIM(UPPER(maf.ACTIVITY_TYPE_NAME)) AS SOURCE_ACT_TYPE,
	maf.MK_PRODUCT_BRAND_PM_ID AS MK_PRODUCT_BRAND_PM_ID, 
	maf.MK_THERAPEUTIC_CLASS_PM_ID AS MK_THERAPEUTIC_CLASS_PM_ID,
	NVL(brand.PRODUCT_BRAND_NAME,maf.MARKETING_BRAND) AS PRODUCT_NAME,  
	COALESCE(thera.THERAPEUTIC_CLASS,brand.PRODUCT_BRAND_NAME,maf.MARKETING_BRAND) AS THERAPEUTIC_AREA, 
	UPPER(maf.TACTIC_CD) AS ACTUAL_TACTIC_CODE,
	CASE WHEN UPPER(maf.SOURCE_CD) = 'SFMC' AND  UPPER(maf.TACTIC_CD) LIKE '%-%-%!_%' ESCAPE '!' THEN SUBSTR(UPPER(maf.TACTIC_CD), 1,11)                                   
		 WHEN UPPER(maf.SOURCE_CD) = 'SFMC' AND UPPER(maf.TACTIC_CD) LIKE '%BIOGEN-%!_%' ESCAPE '!' THEN SUBSTR(UPPER(maf.TACTIC_CD), 1,12) 
		 ELSE maf.TACTIC_CD END TACTIC_CODE,
	CASE WHEN UPPER(maf.SOURCE_CD) = 'SFMC' AND  UPPER(maf.TACTIC_CD) LIKE '%-%-%!_R%' ESCAPE '!'  THEN SUBSTR(UPPER(maf.TACTIC_CD), 1,11) 
		 WHEN UPPER(maf.SOURCE_CD) = 'SFMC' AND UPPER(maf.TACTIC_CD) LIKE '%BIOGEN-%!_%R%' ESCAPE '!' THEN SUBSTR(UPPER(maf.TACTIC_CD), 1,12) 
		 ELSE maf.TACTIC_CD END ORIG_TACTIC_CODE_OF_RESENDS,
	CASE WHEN UPPER(maf.SOURCE_CD) = 'SFMC' AND (UPPER(maf.TACTIC_CD) LIKE '%-%-%!_R%' ESCAPE '!'  OR UPPER(maf.TACTIC_CD) LIKE '%BIOGEN-%!_%R%' ESCAPE '!' )  THEN 'Y' 
		 ELSE 'N' END RESEND_FLAG,
	CASE WHEN maf.TACTIC_CD LIKE '%BIOGEN-%' THEN SUBSTR(maf.TACTIC_CD,1,12) 
	     ELSE SUBSTR(maf.TACTIC_CD,1,11) END AS BASE_TACTIC,	 
	maf.TACTIC_DESC AS TACTIC_DESC,
	maf.OFFER_CD1 AS OFFER_CODE1,
	maf.OFFER_CD2 AS OFFER_CODE2,
	maf.OFFER_CD3 AS OFFER_CODE3,
	maf.OFFER_CD4 AS OFFER_CODE4,
	maf.OFFER_CD5 AS OFFER_CODE5,
	CASE WHEN maf.MK_ACCOUNT_VNT_ID = '-1' and maf.MK_PATIENT_GNE_ID = '-1' THEN 'N' 
		 ELSE 'Y' END IDENTIFIED_FLAG,   
	TRIM(def.ACTIVITY_SOURCE_KEY1) AS ACTIVITY_SOURCE,
	TRIM(NVL(def.METRIC_TYPE,def.ACTIVITY_TYPE_KEY2)) AS TYPE,
	TRIM(UPPER(def.ACTIVITY_SUBCHANNEL)) AS ACTIVITY_SUBCHANNEL,
	TRIM(def.ACTIVITY_VENDOR) AS ACTIVITY_VENDOR,
	def.METRIC_TYPE AS METRIC_TYPE,
	CASE WHEN def.METRIC_TYPE IS NULL THEN 1 
		 ELSE 0 END  METRIC_TYPE_NULL_FLAG,
	CASE WHEN UPPER(maf.ATTRIBUTE_1_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_1_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_2_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_2_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_3_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_3_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_4_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_4_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_5_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_5_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_6_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_6_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_7_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_7_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_8_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_8_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_9_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_9_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_10_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_10_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_11_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_11_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_12_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_12_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_13_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_13_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_14_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_14_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_15_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_15_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_16_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_16_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_17_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_17_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_18_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_18_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_19_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_19_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_20_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_20_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_21_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_21_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_22_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_22_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_23_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_23_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_24_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_24_VALUE
		 WHEN UPPER(maf.ATTRIBUTE_25_NAME) = 'CAMPAIGN' THEN maf.ATTRIBUTE_25_VALUE 
		 ELSE 'UNKNOWN' END AS CAMPAIGN,
	def.COMMENTS,
	def.HCP_TACTIC_TYPE,
	c_tc.ACTIVITY_TACTIC_CODE,
	c_tc.TACTIC_DOCUMENT_NAME,
	c_tc.TACTIC_PRODUCT,
	c_tc.TACTIC_DESCRIPTION,
	c_tc.TACTIC_TYPE,
	c_tc.APPROVEDFORDISTRIBUTION_DATE,
	c_tc.TACTIC_EXPIRATION_DATE,
	CASE WHEN c_tc.ACTIVITY_TACTIC_CODE IS NOT NULL THEN 1 
		 ELSE 0 END TACTIC_CODE_FLAG,
	c_kc.ACTIVITY_TACTIC_CODE AS KIT_CODE,
	CASE WHEN c_kc.ACTIVITY_TACTIC_CODE IS NOT NULL THEN 1 
		 ELSE 0 END KIT_CODE_FLAG,
	UPPER(c_kc.ACTIVITY_EM_CATEGORY) AS ACTIVITY_EM_CATEGORY,
	UPPER(c_kc.ACTIVITY_EM_STREAM) AS ACTIVITY_EM_STREAM,
	UPPER(c_kc.ACTIVITY_SUB_STREAM) AS ACTIVITY_SUB_STREAM,
	c_kc.ACTIVITY_EM_NUMBER,
	c_kc.ACTIVITY_EM_NUMBER_WITH_AB_SPLIT,
	'Non-Personal' AS ACTIVITY_CLASS,
	CASE WHEN UPPER(maf.ATTRIBUTE_2_NAME) = 'SITEORIGIN' AND def.ACTIVITY_CHANNEL IS NULL THEN 'WEB' 
		 ELSE def.ACTIVITY_CHANNEL END AS ACTIVITY_CHANNEL,
	NVL(TRIM(maf.CHANNEL_NAME), def.ACTIVITY_SOURCE_KEY1) AS ACTIVITY_SOURCE_CHANNEL,
	CASE WHEN UPPER(maf.SOURCE_CD) = 'SFDC_US' THEN 'HOME OFFICE'                         
		 WHEN UPPER(def.ACTIVITY_SUBCHANNEL) IN ('EMAIL', 'DIRECT MAIL') AND UPPER(maf.SOURCE_CD) = 'SFMC' THEN 'HOME OFFICE'
		 ELSE '3RD PARTY' END AS SOURCE_TYPE,
	NVL(TRIM(UPPER(maf.ACTIVITY_TYPE_NAME)),TRIM(NVL(def.METRIC_TYPE,def.ACTIVITY_TYPE_KEY2))) AS ACTIVITY_TYPE,
	CASE WHEN def.CAE_FLAG = '1' THEN 'Y' 
		 ELSE 'N' END CAE_FLAG,
	CASE WHEN def.CONTACTED_FLAG = '1' THEN 'Y' 
		 ELSE 'N' END CONTACTED_FLAG,
	CASE WHEN def.ENGAGED_FLAG = '1' THEN 'Y' 
		 ELSE 'N' END ENGAGED_FLAG,
	CASE WHEN def.ACTED_FLAG = '1' THEN 'Y' 
		 ELSE 'N' END ACTED_FLAG,
	CASE WHEN def.LIGHT_FLAG = '1' THEN 'Y' 
		 ELSE 'N' END LIGHT_FLAG,
	CASE WHEN def.DEEP_FLAG = '1' THEN 'Y' 
		 ELSE 'N' END DEEP_FLAG,
	CASE WHEN sf_target.MK_ACCOUNT_VNT_ID IS NOT NULL THEN 'Y' 
		 ELSE 'N' END AS SF_TARGET, 
	CASE WHEN maf.MK_ACCOUNT_VNT_ID = '-1' AND maf.MK_PATIENT_GNE_ID = '-1' THEN maf.CUSTOMER_IDENTITY_VALUE 
		 WHEN maf.MK_PATIENT_GNE_ID = -1 THEN maf.MK_ACCOUNT_VNT_ID 
		 ELSE maf.MK_PATIENT_GNE_ID END AS MDM_ID,
	NVL(c_tc.TACTIC_TITLE, maf.TACTIC_DESC) AS TACTIC_TITLE,
	CASE WHEN NVL(UPPER(TRIM(maf.CHANNEL_NAME)), UPPER(def.ACTIVITY_SOURCE_KEY1)) = 'EXACT TARGET EMAIL' THEN maf.ATTRIBUTE_1_VALUE 
		 ELSE 'UNKNOWN' END AS TACTIC_EM_TYPE, 
	COALESCE(maf.OFFER_CD1,maf.OFFER_CD2,maf.OFFER_CD3,maf.OFFER_CD4,maf.OFFER_CD5) AS ACTIVITY_OFFER_CODE,
	CASE WHEN maf.MK_ACCOUNT_VNT_ID = '-1' AND maf.MK_PATIENT_GNE_ID = '-1' THEN maf.CUSTOMER_IDENTITY_VALUE
		 WHEN maf.MK_PATIENT_GNE_ID = -1 THEN 'VNID'||maf.MK_ACCOUNT_VNT_ID 
		 ELSE 'LH'||maf.MK_PATIENT_GNE_ID END AS ALIGNMENT_STRING,
	CASE WHEN UPPER(maf.DESTINATION_ID_TYPE) = 'URL' AND (UPPER(maf.DESTINATION_ID_VALUE)  LIKE '%UNSUBSCRIBE%' OR UPPER(maf.DESTINATION_ID_VALUE) LIKE '%BIOGENPREFERENCECENTER%') THEN 'Y' 
		 ELSE 'N' END AS UNSUBCRIBE_CLICKS_FLAG,
	CASE WHEN UPPER(maf.ATTRIBUTE_24_NAME) = 'FIREWALL_FLAG' AND UPPER(maf.ATTRIBUTE_24_VALUE) = 'Y' THEN 'Y' 
		 ELSE 'N' END AS FIREWALL_CLICK_FLAG,
	ROW_NUMBER() OVER(PARTITION BY MDM_ID,ACTIVITY_TYPE,TACTIC_CODE ORDER BY maf.ACTIVITY_TIME DESC) AS ACTIVITY_SEQ_NUMBER, 
	ROW_NUMBER() OVER(PARTITION BY MDM_ID,ACTIVITY_TYPE,ACTUAL_TACTIC_CODE ORDER BY maf.ACTIVITY_TIME DESC) AS BOUNCE_ACTIVITY_SEQ_NUMBER

 FROM 
	__SNOWFLAKE_MKHB_DB__.SEMANTIC.MKTG_CUSTOMER_ACTIVITY_FACT maf
 LEFT JOIN 
	__SNOWFLAKE_NGCA_DB__.MCE.KPI_DEFINITION def ON UPPER(TRIM(maf.ACTIVITY_TYPE_NAME)) = UPPER(TRIM(def.ACTIVITY_TYPE_KEY2)) 
	AND UPPER(TRIM(maf.CHANNEL_NAME)) = UPPER(TRIM(def.ACTIVITY_SOURCE_KEY1)) AND TO_CHAR(def.END_DATE,'YY') = '99'
 LEFT JOIN 
	(
	 SELECT ACTIVITY_TACTIC_CODE,TACTIC_TITLE,TACTIC_DOCUMENT_NAME,TACTIC_PRODUCT,TACTIC_DESCRIPTION,TACTIC_TYPE,APPROVEDFORDISTRIBUTION_DATE,TACTIC_EXPIRATION_DATE 
	 FROM __SNOWFLAKE_NGCA_DB__.MCE.TACTIC_DEFINITION 
          QUALIFY ROW_NUMBER() OVER (PARTITION BY ACTIVITY_TACTIC_CODE ORDER BY TACTIC_EXPIRATION_DATE DESC NULLS LAST) = 1
	) c_tc ON CASE WHEN  UPPER(maf.SOURCE_CD) = 'SFMC' AND  maf.TACTIC_CD LIKE '%-%-%!_%' ESCAPE '!' THEN SUBSTR(maf.TACTIC_CD, 1,11)                                   
                   WHEN UPPER(maf.SOURCE_CD) = 'SFMC' AND maf.TACTIC_CD LIKE '%BIOGEN-%!_%' ESCAPE '!' THEN SUBSTR(maf.TACTIC_CD, 1,12) 
				   ELSE maf.TACTIC_CD  END = c_tc.ACTIVITY_TACTIC_CODE 
 LEFT JOIN 
	__SNOWFLAKE_NGCA_DB__.MCE.KIT_CODE_DEFINITION c_kc ON UPPER(maf.TACTIC_CD) = UPPER(c_kc.ACTIVITY_TACTIC_CODE) 
 LEFT JOIN 
	__SNOWFLAKE_NGDW_DB__.SEMANTIC.VNT_ACCOUNT_DIM account_dim  ON maf.MK_ACCOUNT_VNT_ID = account_dim.MK_ACCOUNT_VNT_ID
 LEFT JOIN 
	__SNOWFLAKE_NGDW_DB__.SEMANTIC.PATIENT_DIM patient_dim ON maf.MK_PATIENT_GNE_ID = patient_dim.MK_PATIENT_GNE_ID  
 LEFT JOIN 
	__SNOWFLAKE_NGDW_DB__.SEMANTIC.PRODUCT_BRAND_MASTER brand  ON UPPER(maf.MK_PRODUCT_BRAND_PM_ID) = UPPER(brand.MK_PRODUCT_BRAND_PM_ID)
 LEFT JOIN
	__SNOWFLAKE_NGDW_DB__.SEMANTIC.THERAPEUTIC_CLASS_MASTER thera ON UPPER(maf.MK_THERAPEUTIC_CLASS_PM_ID) = UPPER(thera.MK_THERAPEUTIC_CLASS_PM_ID)
 LEFT JOIN 
	sf_target ON maf.MK_ACCOUNT_VNT_ID = sf_target.MK_ACCOUNT_VNT_ID 
			  AND TO_DATE(maf.ACTIVITY_TIME) BETWEEN sf_target.CYCLE_PLAN_START_DATE AND sf_target.UPDATED_CYCLE_PLAN_END_DATE 

 WHERE 
	TO_DATE(maf.ACTIVITY_TIME) >= '2015-01-01' 
);
